Question 1 - 15 points - answer either Q1A or Q1B, but not both
(A) Given the memory partitions of 600K, 300K, 700K and 200K in order, how would each of the First-Fit, Best-Fit algorithms place processes of 230 K, 525K, 175K and 300K (in order)?

(B) Consider a paging system with the page table stored in memory and registers.
If 70% of all page-table references are found in the TLBs, what is the effective access time?  Assume that finding a page-table entry in the TLBs takes 25ns and a memory access takes 175ns.  Give a literal solution first (formula).
________________________________________________________________________________

Question 2 - 20 points
(A) Define INTERNAL FRAGMENTATION.  Give examples of memory allocation schemes(at least 2) that suffer from internal fragmentation.

(B) Describe ASSOCIATIVE MAPPING.  Give its advantages and disadvantages.
________________________________________________________________________________

Question 3 - 25 points
(A) Consider the 2-dimensional array A: int a[][] = new int[9][9];
Where A[0][0] is at location 89, in a paged system with pages of size 27.  As small process is in page 1 for manipulating the matrix; every instruction fetch will be from page 1.
For 3 page frames, how many page faults are generated by the following 
array-initialization loop?  All frames were initially empty.  An LRU algorithm is used:

for(int j=0; j<0; j++)
{
	for(int i=0; i<9; i++)
	{
		A[i][j]=0;
	}
}
In the solution of this problem, you should:
	-Show the contents of the logical address space, how the array and 
	 instructions are stored
	-Give the reference string generated by the CPU during the 
	 initialization
	-On the reference string, show the page faults
	-For each reference, explain what element is initialized or if the 
	 instruction is fetched
	-Explain the final computation of the page fault number

(B) Is this the most efficient initialization?  Briefly explain your answer.
________________________________________________________________________________


Question 4 - 30 points

Consider the logical address spaces and page tables for P1 and P2.  The main 
memory contains pages of P1 and P2.  The main memory has 12 frames.  There are free frames.
(A) Draw a picture that will illustrate the content of the main memory (what variable, from P1 and P2, each frame might contain).

(B) Describe the steps that will be followed by the OS and MMU in case that the next instruction to be executed by the CPU for P2 is: load M.  A reference to variable M is a legal reference.
NOTE: You can draw a picture to illustrate your answer.  Show any table updates.

(C) For the logical or physical address, registers of size 16 are used.  The offset field takes 6 bits, page or fram number fields take 10 bits.  Offset for variable L is 18.
	-What will be the logical address generated by the CPU for load L?
	-What will be the physical address generated by the CPU for load L?
NOTE: The logical/physical address is the binary representation of 2 fields 
(page/frame number and displacement)

Logical Address Space for P1			    Logical Address Space for P2
0	O						0	B
1	L						1	M
2	S						2	U
3	N						3	C
4	K
5	T

Page Table P1					    Page Table P2
p	f		V/I			p	f		V/I
0	disk address	0			0	1		1
1	7		1			1	disk address	0
2	3		1			2	8		1
3	disk address	0			3	disk address	0
4	10		1
5	4		1

