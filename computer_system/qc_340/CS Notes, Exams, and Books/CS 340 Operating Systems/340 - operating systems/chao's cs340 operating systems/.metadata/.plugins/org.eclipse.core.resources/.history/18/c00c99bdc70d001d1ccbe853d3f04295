/*
CSCI 340 6:30 - 7:45pm 
Project 1
By: Yachao Liu
April 7, 2008
*/


public class Project1{
	
	int group;//a counter to see if visitors are grouped
	int handiV;
	public Project1(){
		group = 0;
		handiV = 0;
	}//constructor
	
	public static void main(String args[]){
		
	try{
		int numVisitors = 0;//numVisitors
		int numCar = 0;//numCars
		int groupSize = 0;//groupSize
		int hTime = 0;//time to wait for handicapp person
		Project1 main = new Project1();
			
		numVisitors = Integer.parseInt(args[0]);
		numCar = Integer.parseInt(args[1]);
		groupSize = Integer.parseInt(args[2]);
		hTime = Integer.parseInt(args[3]);
		
		main.initVisitors(numVisitors, main);
		main.initCar(numCar, main);
		Thread controller = new Thread(new Controller(main), "Controller");
		controller.start();
		
	}//try
	catch(Exception e){
			System.out.println("Must supply argument values");
	}//catch
	}//main
	
	public synchronized void getTogether(){
			group++;//increase groupsize
	}//getTogether
	
	public synchronized int getGroup(){
		return group;//get current group size
	}//getGroup
	
	/*
	public synchronized void getTogether(boolean h){
		if(h)
			handiV++;//handicap visitor forms group
		else
			group++;//increase groupsize
		
	}//getTogether
	
	public synchronized int getGroup(){
		return group+handiV;//get current group size
	}//getGroup
	*/
	
	public void initVisitors(int numVisitors, Project1 p){
		Thread Visitors[] = new Thread[numVisitors];
		
		for(int i = 0; i < numVisitors; i++){
			Visitors[i] = new Thread(new Visitor(p), "Visitor " + i);
			Visitors[i].start();
		}//for
	}//initVisitors
	
	public void initCar(int numCar, Project1 p){
		Thread Cars[] = new Thread[numCar];
		
		for(int i = 0; i < numCar; i++){
			Cars[i] = new Thread(new Car(p), "Car " + i);
			Cars[i].start();
		}//for
	}//initCar
		
}//Project 1